
<problem>
    <script>
from math import factorial as f
from math import ceil
import random

def C(n,m):
    return f(n)/f(m)/f(n-m)

def myrandom(start,stop,step=1):
    return random.randint(0, int((stop - start) / step)) * step + start



n=myrandom(15,20,1)

k=myrandom(5,n-4,1)




answer1=1.0*2**n
answer2=1.0*n/(k*(n-k))
answer3=1.0*n/(k*(n-k))/2**n
</script>
<p></p>
<p></p>
<p>In this problem we will continue our work from the previous problem, and find a general solution to getting $k heads while flipping $n coins. </p>
<p>The number of sequences of $n coin flips is <numericalresponse answer="$answer1">
                    <responseparam type="tolerance" default="1%" />
                    <formulaequationinput />
                </numericalresponse>
</p>
<p>The number of coin flip sequences where $k of the $n flips are heads is</p>
<p><numericalresponse answer="$answer2">
                    <responseparam type="tolerance" default="1%" />
                    <formulaequationinput />
                </numericalresponse>
</p>
<p>Therefore, the probability of getting exactly $k heads when flipping $n fair coins is <numericalresponse answer="$answer3">
                    <responseparam type="tolerance" default="1%" />
                    <formulaequationinput />
                </numericalresponse>
</p>
<p></p>
</problem>